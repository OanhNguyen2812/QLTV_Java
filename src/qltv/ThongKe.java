/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import java.sql.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author mieum
 */
public class ThongKe extends javax.swing.JFrame {

    DefaultTableModel tbn = new DefaultTableModel();

    public ThongKe() {
        initComponents();
        getTT();
    }

    public void getTT() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://OANHNGUYEN:1433;databaseName=QLTV;user=sa;password=123";
            Connection conn = DriverManager.getConnection(url);

            String sql1 = "SELECT SUM(SoLuong) as sach FROM SACH";
            String sql2 = "SELECT COUNT(ID_BanDoc) as bandoc FROM BanDoc";
            String sql3 = "SELECT COUNT(ID_NhanVien) as nhanvien FROM NhanVien";
            String sql4 = "SELECT COUNT(ID_MuonTra) as phieumuon FROM MuonTraSach";
            String sql5 = "SELECT COUNT(DISTINCT ID_BanDoc) as banmuon FROM MuonTraSach";
            String sql6 = "SELECT COUNT(ID_MuonTra) as muontra FROM MuonTraSach where (NgayHenTra < (select GETDATE())) and NgayTra IS NULL";

            Statement st1 = conn.createStatement();
            Statement st2 = conn.createStatement();
            Statement st3 = conn.createStatement();
            Statement st4 = conn.createStatement();
            Statement st5 = conn.createStatement();
            Statement st6 = conn.createStatement();

            ResultSet rs1 = st1.executeQuery(sql1);
            ResultSet rs2 = st2.executeQuery(sql2);
            ResultSet rs3 = st3.executeQuery(sql3);
            ResultSet rs4 = st4.executeQuery(sql4);
            ResultSet rs5 = st5.executeQuery(sql5);
            ResultSet rs6 = st6.executeQuery(sql6);

            if (rs1.next()) {
                this.lbtsach.setText("Tổng số sách : " + Integer.toString(rs1.getInt("sach")));
            }
            if (rs2.next()) {
                this.lbtbandoc.setText("Tổng số bạn đọc: " + Integer.toString(rs2.getInt("bandoc")));
            }
            if (rs3.next()) {
                this.lbtnv.setText("Tổng số nhân viên: " + Integer.toString(rs3.getInt("nhanvien")));
            }
            if (rs4.next()) {
                this.lbtmuon.setText("Tổng số phiếu mượn: " + Integer.toString(rs4.getInt("phieumuon")));
            }
            if (rs5.next()) {
                this.lbtbanmuon.setText("Tổng số bạn đọc đang mượn sách: " + Integer.toString(rs5.getInt("banmuon")));
            }
            if (rs6.next()) {
                this.lbquahan.setText("Tổng số phiếu quá hạn là: " + Integer.toString(rs6.getInt("muontra")));
            }

            conn.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lbhienthi = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rbdangmuon = new javax.swing.JRadioButton();
        rbquahan = new javax.swing.JRadioButton();
        btnthongtin = new javax.swing.JButton();
        btnthoat = new javax.swing.JButton();
        rbmuonnhieu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbthongtin = new javax.swing.JTable();
        lbtsach = new javax.swing.JLabel();
        lbtbandoc = new javax.swing.JLabel();
        lbtnv = new javax.swing.JLabel();
        lbtmuon = new javax.swing.JLabel();
        lbtbanmuon = new javax.swing.JLabel();
        lbquahan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbhienthi.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lbhienthi.setText("Thống kê ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xử lý thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        rbdangmuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rbdangmuon.setText("Đang mượn");

        rbquahan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rbquahan.setText("Mượn quá hạn");

        btnthongtin.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnthongtin.setText("Thông tin");
        btnthongtin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthongtinActionPerformed(evt);
            }
        });

        btnthoat.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnthoat.setText("Thoát");
        btnthoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatActionPerformed(evt);
            }
        });

        rbmuonnhieu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rbmuonnhieu.setText("Sách được mượn nhiều");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbquahan)
                    .addComponent(rbdangmuon)
                    .addComponent(rbmuonnhieu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnthongtin)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnthoat)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbdangmuon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbquahan))
                    .addComponent(btnthongtin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbmuonnhieu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnthoat)
                .addContainerGap())
        );

        tbthongtin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbthongtin);

        lbtsach.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbtsach.setMaximumSize(new java.awt.Dimension(200, 30));
        lbtsach.setMinimumSize(new java.awt.Dimension(50, 25));

        lbtbandoc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbtbandoc.setMaximumSize(new java.awt.Dimension(200, 30));
        lbtbandoc.setMinimumSize(new java.awt.Dimension(50, 25));

        lbtnv.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbtnv.setMaximumSize(new java.awt.Dimension(200, 30));
        lbtnv.setMinimumSize(new java.awt.Dimension(50, 25));

        lbtmuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbtmuon.setMaximumSize(new java.awt.Dimension(200, 30));
        lbtmuon.setMinimumSize(new java.awt.Dimension(50, 25));

        lbtbanmuon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbtbanmuon.setMaximumSize(new java.awt.Dimension(200, 30));
        lbtbanmuon.setMinimumSize(new java.awt.Dimension(50, 25));

        lbquahan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbquahan.setMaximumSize(new java.awt.Dimension(200, 30));
        lbquahan.setMinimumSize(new java.awt.Dimension(50, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(lbhienthi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbtmuon, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addComponent(lbquahan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbtbanmuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbtbandoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbtsach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lbtnv, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbhienthi)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lbtsach, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbtbandoc, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbtnv, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbtmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbtbanmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbquahan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnthoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatActionPerformed
        // TODO add your handling code here:
        new Main().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnthoatActionPerformed

    private void btnthongtinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthongtinActionPerformed
        // TODO add your handling code here:
        try {
            tbn.setRowCount(0);
            int numberls;
            Vector rowls, columnls;
            rowls = new Vector();
            columnls = new Vector();
            // TODO add your handling code here:
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://OANHNGUYEN:1433;databaseName=QLTV;user=sa;password=123";
            Connection conn = DriverManager.getConnection(url);
            if (rbdangmuon.isSelected()) {
                String sql = "SELECT ID_MuonTra,TenBanDoc,TenSach,MuonTraSach.SoLuong,NgayMuon,NgayHenTra  "
                        + "FROM MuonTraSach,BanDoc,Sach "
                        + "where MuonTraSach.ID_BanDoc=BanDoc.ID_BanDoc and MuonTraSach.ID_Sach=Sach.ID_Sach and NgayTra IS NULL";
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                numberls = metadata.getColumnCount();// trả về số cột

                for (int i = 1; i <= numberls; i++) {
                    columnls.add(metadata.getColumnName(i));//lấy ra tiêu đề các cột
                }
                tbn.setColumnIdentifiers(columnls);
                while (rs.next()) {
                    rowls = new Vector();
                    for (int i = 1; i <= numberls; i++) {
                        rowls.addElement(rs.getString(i));
                    }
                    tbn.addRow(rowls);

                    tbthongtin.setModel(tbn);
                }
            } else if (rbquahan.isSelected()) {
                String sql = "SELECT * FROM MuonTraSach where (NgayHenTra < (select GETDATE())) and NgayTra IS NULL";
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                numberls = metadata.getColumnCount();// trả về số cột

                for (int i = 1; i <= numberls; i++) {
                    columnls.add(metadata.getColumnName(i));//lấy ra tiêu đề các cột
                }
                tbn.setColumnIdentifiers(columnls);
                while (rs.next()) {
                    rowls = new Vector();
                    for (int i = 1; i <= numberls; i++) {
                        rowls.addElement(rs.getString(i));
                    }
                    tbn.addRow(rowls);
                    tbthongtin.setModel(tbn);
                }
            } else if (rbmuonnhieu.isSelected()) {
                String sql = "SELECT TOP 10 WITH TIES MuonTraSach.ID_Sach,Sach.TenSach,TenLoaiSach,TenNXB,SUM(MuonTraSach.SoLuong)AS SoLuong\n"
                        + "FROM MuonTraSach\n"
                        + "INNER JOIN Sach ON MuonTraSach.ID_Sach = Sach.ID_Sach\n"
                        + "FULL OUTER JOIN LoaiSach ON Sach.ID_LoaiSach = LoaiSach.ID_LoaiSach\n"
                        + "FULL OUTER JOIN NXB ON Sach.ID_NXB = NXB.ID_NXB\n"
                        + "where Sach.ID_LoaiSach = LoaiSach.ID_LoaiSach and Sach.ID_NXB = NXB.ID_NXB\n"
                        + "GROUP BY Sach.TenSach,MuonTraSach.ID_Sach,LoaiSach.TenLoaiSach,NXB.TenNXB\n"
                        + "ORDER BY SoLuong DESC";
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                numberls = metadata.getColumnCount();// trả về số cột

                for (int i = 1; i <= numberls; i++) {
                    columnls.add(metadata.getColumnName(i));//lấy ra tiêu đề các cột
                }
                tbn.setColumnIdentifiers(columnls);
                while (rs.next()) {
                    rowls = new Vector();
                    for (int i = 1; i <= numberls; i++) {
                        rowls.addElement(rs.getString(i));
                    }
                    tbn.addRow(rowls);
                    tbthongtin.setModel(tbn);
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSach.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QLSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnthongtinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnthoat;
    private javax.swing.JButton btnthongtin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbhienthi;
    private javax.swing.JLabel lbquahan;
    private javax.swing.JLabel lbtbandoc;
    private javax.swing.JLabel lbtbanmuon;
    private javax.swing.JLabel lbtmuon;
    private javax.swing.JLabel lbtnv;
    private javax.swing.JLabel lbtsach;
    private javax.swing.JRadioButton rbdangmuon;
    private javax.swing.JRadioButton rbmuonnhieu;
    private javax.swing.JRadioButton rbquahan;
    private javax.swing.JTable tbthongtin;
    // End of variables declaration//GEN-END:variables
}
